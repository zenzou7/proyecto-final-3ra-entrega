{"level":"error","message":"Error in signup CastError: Cast to string failed for value \"<ref *2> IncomingMessage {\n  _readableState: ReadableState {\n    objectMode: false,\n    highWaterMark: 16384,\n    buffer: BufferList { head: null, tail: null, length: 0 },\n    length: 0,\n    pipes: [],\n    flowing: true,\n    ended: true,\n    endEmitted: true,\n    reading: false,\n    constructed: true,\n    sync: false,\n    needReadable: false,\n    emittedReadable: false,\n    readableListening: false,\n    resumeScheduled: false,\n    errorEmitted: false,\n    emitClose: true,\n    autoDestroy: true,\n    destroyed: true,\n    errored: null,\n    closed: true,\n    closeEmitted: false,\n    defaultEncoding: 'utf8',\n    awaitDrainWriters: null,\n    multiAwaitDrain: false,\n    readingMore: false,\n    dataEmitted: true,\n    decoder: null,\n    encoding: null,\n    [Symbol(kPaused)]: false\n  },\n  _events: [Object: null prototype] {},\n  _eventsCount: 0,\n  _maxListeners: undefined,\n  socket: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      _events: [Object: null prototype],\n      _eventsCount: 5,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 23,\n      [Symbol(http.server.connections)]: ConnectionsList {},\n      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 32681,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(kHasPrimitive)]: false,\n        [Symbol(asyncId)]: 22,\n        [Symbol(triggerId)]: 1\n      },\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      _events: [Object: null prototype],\n      _eventsCount: 5,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 23,\n      [Symbol(http.server.connections)]: ConnectionsList {},\n      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 32681,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(kHasPrimitive)]: false,\n        [Symbol(asyncId)]: 22,\n        [Symbol(triggerId)]: 1\n      },\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kEndCalled)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 633,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: true,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: true,\n  rawHeaders: [\n    'Host',\n    '127.0.0.1:8080',\n    'Connection',\n    'keep-alive',\n    'Content-Length',\n    '155',\n    'Cache-Control',\n    'max-age=0',\n    'sec-ch-ua',\n    '\"Chromium\";v=\"110\", \"Not A(Brand\";v=\"24\", \"Google Chrome\";v=\"110\"',\n    'sec-ch-ua-mobile',\n    '?0',\n    'sec-ch-ua-platform',\n    '\"Windows\"',\n    'Upgrade-Insecure-Requests',\n    '1',\n    'Origin',\n    'http://127.0.0.1:8080',\n    'Content-Type',\n    'application/x-www-form-urlencoded',\n    'User-Agent',\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36',\n    'Accept',\n    'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'Sec-Fetch-Site',\n    'same-origin',\n    'Sec-Fetch-Mode',\n    'navigate',\n    'Sec-Fetch-User',\n    '?1',\n    'Sec-Fetch-Dest',\n    'document',\n    'Referer',\n    'http://127.0.0.1:8080/api/productos/signup',\n    'Accept-Encoding',\n    'gzip, deflate, br',\n    'Accept-Language',\n    'es-ES,es;q=0.9,en;q=0.8'\n  ],\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url: '/signup',\n  method: 'POST',\n  statusCode: null,\n  statusMessage: null,\n  client: <ref *1> Socket {\n    connecting: false,\n    _hadError: false,\n    _parent: null,\n    _host: null,\n    _closeAfterHandlingError: false,\n    _readableState: ReadableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      buffer: BufferList { head: null, tail: null, length: 0 },\n      length: 0,\n      pipes: [],\n      flowing: true,\n      ended: false,\n      endEmitted: false,\n      reading: true,\n      constructed: true,\n      sync: false,\n      needReadable: true,\n      emittedReadable: false,\n      readableListening: false,\n      resumeScheduled: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      destroyed: false,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      defaultEncoding: 'utf8',\n      awaitDrainWriters: null,\n      multiAwaitDrain: false,\n      readingMore: false,\n      dataEmitted: false,\n      decoder: null,\n      encoding: null,\n      [Symbol(kPaused)]: false\n    },\n    _events: [Object: null prototype] {\n      end: [Array],\n      timeout: [Function: socketOnTimeout],\n      data: [Function: bound socketOnData],\n      error: [Function: socketOnError],\n      close: [Array],\n      drain: [Function: bound socketOnDrain],\n      resume: [Function: onSocketResume],\n      pause: [Function: onSocketPause]\n    },\n    _eventsCount: 8,\n    _maxListeners: undefined,\n    _writableState: WritableState {\n      objectMode: false,\n      highWaterMark: 16384,\n      finalCalled: false,\n      needDrain: false,\n      ending: false,\n      ended: false,\n      finished: false,\n      destroyed: false,\n      decodeStrings: false,\n      defaultEncoding: 'utf8',\n      length: 0,\n      writing: false,\n      corked: 0,\n      sync: true,\n      bufferProcessing: false,\n      onwrite: [Function: bound onwrite],\n      writecb: null,\n      writelen: 0,\n      afterWriteTickInfo: null,\n      buffered: [],\n      bufferedIndex: 0,\n      allBuffers: true,\n      allNoop: true,\n      pendingcb: 0,\n      constructed: true,\n      prefinished: false,\n      errorEmitted: false,\n      emitClose: false,\n      autoDestroy: true,\n      errored: null,\n      closed: false,\n      closeEmitted: false,\n      [Symbol(kOnFinished)]: []\n    },\n    allowHalfOpen: true,\n    _sockname: null,\n    _pendingData: null,\n    _pendingEncoding: '',\n    server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      _events: [Object: null prototype],\n      _eventsCount: 5,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 23,\n      [Symbol(http.server.connections)]: ConnectionsList {},\n      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 32681,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(kHasPrimitive)]: false,\n        [Symbol(asyncId)]: 22,\n        [Symbol(triggerId)]: 1\n      },\n      [Symbol(kUniqueHeaders)]: null\n    },\n    _server: Server {\n      maxHeaderSize: undefined,\n      insecureHTTPParser: undefined,\n      requestTimeout: 300000,\n      headersTimeout: 60000,\n      keepAliveTimeout: 5000,\n      connectionsCheckingInterval: 30000,\n      _events: [Object: null prototype],\n      _eventsCount: 5,\n      _maxListeners: undefined,\n      _connections: 2,\n      _handle: [TCP],\n      _usingWorkers: false,\n      _workers: [],\n      _unref: false,\n      allowHalfOpen: true,\n      pauseOnConnect: false,\n      noDelay: true,\n      keepAlive: false,\n      keepAliveInitialDelay: 0,\n      httpAllowHalfOpen: false,\n      timeout: 0,\n      maxHeadersCount: null,\n      maxRequestsPerSocket: 0,\n      _connectionKey: '6::::8080',\n      [Symbol(IncomingMessage)]: [Function: IncomingMessage],\n      [Symbol(ServerResponse)]: [Function: ServerResponse],\n      [Symbol(kCapture)]: false,\n      [Symbol(async_id_symbol)]: 23,\n      [Symbol(http.server.connections)]: ConnectionsList {},\n      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {\n        _idleTimeout: 30000,\n        _idlePrev: [TimersList],\n        _idleNext: [TimersList],\n        _idleStart: 32681,\n        _onTimeout: [Function: bound checkConnections],\n        _timerArgs: undefined,\n        _repeat: 30000,\n        _destroyed: false,\n        [Symbol(refed)]: false,\n        [Symbol(kHasPrimitive)]: false,\n        [Symbol(asyncId)]: 22,\n        [Symbol(triggerId)]: 1\n      },\n      [Symbol(kUniqueHeaders)]: null\n    },\n    parser: HTTPParser {\n      '0': null,\n      '1': [Function: parserOnHeaders],\n      '2': [Function: parserOnHeadersComplete],\n      '3': [Function: parserOnBody],\n      '4': [Function: parserOnMessageComplete],\n      '5': [Function: bound onParserExecute],\n      '6': [Function: bound onParserTimeout],\n      _headers: [],\n      _url: '',\n      socket: [Circular *1],\n      incoming: [Circular *2],\n      outgoing: null,\n      maxHeaderPairs: 2000,\n      _consumed: true,\n      onIncoming: [Function: bound parserOnIncoming],\n      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]\n    },\n    on: [Function: socketListenerWrap],\n    addListener: [Function: socketListenerWrap],\n    prependListener: [Function: socketListenerWrap],\n    setEncoding: [Function: socketSetEncoding],\n    _paused: false,\n    _httpMessage: ServerResponse {\n      _events: [Object: null prototype],\n      _eventsCount: 1,\n      _maxListeners: undefined,\n      outputData: [],\n      outputSize: 0,\n      writable: true,\n      destroyed: false,\n      _last: false,\n      chunkedEncoding: false,\n      shouldKeepAlive: true,\n      maxRequestsOnConnectionReached: false,\n      _defaultKeepAlive: true,\n      useChunkedEncodingByDefault: true,\n      sendDate: true,\n      _removedConnection: false,\n      _removedContLen: false,\n      _removedTE: false,\n      strictContentLength: false,\n      _contentLength: null,\n      _hasBody: true,\n      _trailer: '',\n      finished: false,\n      _headerSent: false,\n      _closed: false,\n      socket: [Circular *1],\n      _header: null,\n      _keepAliveTimeout: 5000,\n      _onPendingData: [Function: bound updateOutgoingData],\n      req: [Circular *2],\n      _sent100: false,\n      _expect_continue: false,\n      _maxRequestsPerSocket: 0,\n      locals: [Object: null prototype] {},\n      flush: [Function: flush],\n      write: [Function: write],\n      end: [Function: end],\n      on: [Function: on],\n      writeHead: [Function: writeHead],\n      [Symbol(kCapture)]: false,\n      [Symbol(kBytesWritten)]: 0,\n      [Symbol(kEndCalled)]: false,\n      [Symbol(kNeedDrain)]: false,\n      [Symbol(corked)]: 0,\n      [Symbol(kOutHeaders)]: [Object: null prototype],\n      [Symbol(kUniqueHeaders)]: null\n    },\n    [Symbol(async_id_symbol)]: 633,\n    [Symbol(kHandle)]: TCP {\n      reading: true,\n      onconnection: null,\n      _consumed: true,\n      [Symbol(owner_symbol)]: [Circular *1]\n    },\n    [Symbol(lastWriteQueueSize)]: 0,\n    [Symbol(timeout)]: null,\n    [Symbol(kBuffer)]: null,\n    [Symbol(kBufferCb)]: null,\n    [Symbol(kBufferGen)]: null,\n    [Symbol(kCapture)]: false,\n    [Symbol(kSetNoDelay)]: true,\n    [Symbol(kSetKeepAlive)]: false,\n    [Symbol(kSetKeepAliveInitialDelay)]: 0,\n    [Symbol(kBytesRead)]: 0,\n    [Symbol(kBytesWritten)]: 0\n  },\n  _consuming: true,\n  _dumped: false,\n  next: [Function: next],\n  baseUrl: '/api/productos',\n  originalUrl: '/api/productos/signup',\n  _parsedUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/signup',\n    path: '/signup',\n    href: '/signup',\n    _raw: '/signup'\n  },\n  params: {},\n  query: {},\n  res: <ref *3> ServerResponse {\n    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },\n    _eventsCount: 1,\n    _maxListeners: undefined,\n    outputData: [],\n    outputSize: 0,\n    writable: true,\n    destroyed: false,\n    _last: false,\n    chunkedEncoding: false,\n    shouldKeepAlive: true,\n    maxRequestsOnConnectionReached: false,\n    _defaultKeepAlive: true,\n    useChunkedEncodingByDefault: true,\n    sendDate: true,\n    _removedConnection: false,\n    _removedContLen: false,\n    _removedTE: false,\n    strictContentLength: false,\n    _contentLength: null,\n    _hasBody: true,\n    _trailer: '',\n    finished: false,\n    _headerSent: false,\n    _closed: false,\n    socket: <ref *1> Socket {\n      connecting: false,\n      _hadError: false,\n      _parent: null,\n      _host: null,\n      _closeAfterHandlingError: false,\n      _readableState: [ReadableState],\n      _events: [Object: null prototype],\n      _eventsCount: 8,\n      _maxListeners: undefined,\n      _writableState: [WritableState],\n      allowHalfOpen: true,\n      _sockname: null,\n      _pendingData: null,\n      _pendingEncoding: '',\n      server: [Server],\n      _server: [Server],\n      parser: [HTTPParser],\n      on: [Function: socketListenerWrap],\n      addListener: [Function: socketListenerWrap],\n      prependListener: [Function: socketListenerWrap],\n      setEncoding: [Function: socketSetEncoding],\n      _paused: false,\n      _httpMessage: [Circular *3],\n      [Symbol(async_id_symbol)]: 633,\n      [Symbol(kHandle)]: [TCP],\n      [Symbol(lastWriteQueueSize)]: 0,\n      [Symbol(timeout)]: null,\n      [Symbol(kBuffer)]: null,\n      [Symbol(kBufferCb)]: null,\n      [Symbol(kBufferGen)]: null,\n      [Symbol(kCapture)]: false,\n      [Symbol(kSetNoDelay)]: true,\n      [Symbol(kSetKeepAlive)]: false,\n      [Symbol(kSetKeepAliveInitialDelay)]: 0,\n      [Symbol(kBytesRead)]: 0,\n      [Symbol(kBytesWritten)]: 0\n    },\n    _header: null,\n    _keepAliveTimeout: 5000,\n    _onPendingData: [Function: bound updateOutgoingData],\n    req: [Circular *2],\n    _sent100: false,\n    _expect_continue: false,\n    _maxRequestsPerSocket: 0,\n    locals: [Object: null prototype] {},\n    flush: [Function: flush],\n    write: [Function: write],\n    end: [Function: end],\n    on: [Function: on],\n    writeHead: [Function: writeHead],\n    [Symbol(kCapture)]: false,\n    [Symbol(kBytesWritten)]: 0,\n    [Symbol(kEndCalled)]: false,\n    [Symbol(kNeedDrain)]: false,\n    [Symbol(corked)]: 0,\n    [Symbol(kOutHeaders)]: [Object: null prototype] { 'x-powered-by': [Array] },\n    [Symbol(kUniqueHeaders)]: null\n  },\n  body: {\n    username: 'Leo',\n    password: '1234',\n    email: 'leo@hotmail.com',\n    number: '1124559072',\n    avatar: 'https://cdn.iconscout.com/icon/free/png-256/avatar-370-456322.png'\n  },\n  _body: true,\n  length: undefined,\n  logIn: [Function (anonymous)],\n  login: [Function (anonymous)],\n  logOut: [Function (anonymous)],\n  logout: [Function (anonymous)],\n  isAuthenticated: [Function (anonymous)],\n  isUnauthenticated: [Function (anonymous)],\n  _sessionManager: SessionManager {\n    _key: 'passport',\n    _serializeUser: [Function: bound ]\n  },\n  _passport: {\n    instance: Authenticator {\n      _key: 'passport',\n      _strategies: [Object],\n      _serializers: [Array],\n      _deserializers: [Array],\n      _infoTransformers: [],\n      _framework: [Object],\n      _sm: [SessionManager],\n      Authenticator: [Function: Authenticator],\n      Passport: [Function: Authenticator],\n      Strategy: [Function],\n      strategies: [Object],\n      _userProperty: 'user'\n    }\n  },\n  _parsedOriginalUrl: Url {\n    protocol: null,\n    slashes: null,\n    auth: null,\n    host: null,\n    port: null,\n    hostname: null,\n    hash: null,\n    search: null,\n    query: null,\n    pathname: '/api/productos/signup',\n    path: '/api/productos/signup',\n    href: '/api/productos/signup',\n    _raw: '/api/productos/signup'\n  },\n  sessionStore: MongoStore {\n    _events: [Object: null prototype] {\n      disconnect: [Function: ondisconnect],\n      connect: [Function: onconnect]\n    },\n    _eventsCount: 2,\n    _maxListeners: undefined,\n    crypto: null,\n    transformFunctions: {\n      serialize: [Function: stringify],\n      unserialize: [Function: parse]\n    },\n    clientP: Promise { [MongoClient] },\n    options: {\n      collectionName: 'sessions',\n      ttl: 1209600,\n      mongoOptions: [Object],\n      autoRemove: 'native',\n      autoRemoveInterval: 10,\n      touchAfter: 0,\n      stringify: true,\n      crypto: [Object],\n      mongoUrl: 'mongodb+srv://Leo:62742@coder-backend.3x5udc7.mongodb.net/test'\n    },\n    collectionP: Promise { [Collection] },\n    generate: [Function (anonymous)],\n    [Symbol(kCapture)]: false\n  },\n  sessionID: 'zzAfAvvsuLGYhyF9w2hROIYQ6sb0vOm-',\n  session: Session {\n    cookie: {\n      path: '/',\n      _expires: 60000,\n      originalMaxAge: 60000,\n      httpOnly: true\n    }\n  },\n  route: Route {\n    path: '/signup',\n    stack: [ [Layer], [Layer] ],\n    methods: { post: true }\n  },\n  [Symbol(kCapture)]: false,\n  [Symbol(kHeaders)]: {\n    host: '127.0.0.1:8080',\n    connection: 'keep-alive',\n    'content-length': '155',\n    'cache-control': 'max-age=0',\n    'sec-ch-ua': '\"Chromium\";v=\"110\", \"Not A(Brand\";v=\"24\", \"Google Chrome\";v=\"110\"',\n    'sec-ch-ua-mobile': '?0',\n    'sec-ch-ua-platform': '\"Windows\"',\n    'upgrade-insecure-requests': '1',\n    origin: 'http://127.0.0.1:8080',\n    'content-type': 'application/x-www-form-urlencoded',\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36',\n    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'sec-fetch-site': 'same-origin',\n    'sec-fetch-mode': 'navigate',\n    'sec-fetch-user': '?1',\n    'sec-fetch-dest': 'document',\n    referer: 'http://127.0.0.1:8080/api/productos/signup',\n    'accept-encoding': 'gzip, deflate, br',\n    'accept-language': 'es-ES,es;q=0.9,en;q=0.8'\n  },\n  [Symbol(kHeadersCount)]: 38,\n  [Symbol(kTrailers)]: null,\n  [Symbol(kTrailersCount)]: 0\n}\" (type IncomingMessage) at path \"username\" for model \"usuarios\"- log error"}
{"level":"error","message":"Error in saving ValidationError: number: Path `number` (1124559072) is more than maximum allowed value (100).- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: ReferenceError: body is not defined- log error"}
{"level":"error","message":"Error in Post /api/pedidos: SyntaxError: Unexpected token o in JSON at position 1- log error"}
{"level":"error","message":"Error in Post /api/pedidos: SyntaxError: Unexpected token o in JSON at position 1- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/productos/login: TypeError: Cannot destructure property 'username' of 'req.session.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/productos/login: TypeError: Cannot destructure property 'username' of 'req.session.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.session.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
{"level":"error","message":"Error in Post /api/pedidos: TypeError: Cannot destructure property 'username' of 'req.user' as it is undefined.- log error"}
